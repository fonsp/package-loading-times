name: Measure loading times
on:
    workflow_dispatch:

jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                julia-version: ["1.9", "1.10", "1.11", "~1.12.0-0"]
                os: [ubuntu-latest, macos-latest]

        steps:
            - name: Checkout this repository
              uses: actions/checkout@v4
              

            - name: Install Julia
              uses: julia-actions/setup-julia@v2
              with:
                  version: ${{ matrix.julia-version }}
                  

            - id: computefilename
              run: |
                julia -e '
                  import Dates
                  out = replace(string(Dates.now()), r"[:.]" => "-", r"[TZ]" => "_") * "_julia_" * string(VERSION)
                  write("out", out)'
                echo "FOLDER_NAME=$(cat out)" >> $GITHUB_ENV


            - name: Get Julia depot path
              id: finddepot
              run: |
                julia -e '
                  out = first(DEPOT_PATH)
                  write("out", out)'
                echo "JULIA_DEPOT=$(cat out)" >> $GITHUB_ENV



            - name: Get most downloaded packages
              run: |
                julia -e 'using Pkg
                  Pkg.activate(mktempdir())
                  VERSION > v"1.11.9999" ?
                      Pkg.add([
                        Pkg.PackageSpec(name="PlutoSliderServer", version="1"),
                        Pkg.PackageSpec(name="Pluto", rev="51b3e7b"), # for Julia 1.12 compat
                      ]) :
                      Pkg.add([
                        Pkg.PackageSpec(name="PlutoSliderServer"),
                      ])

                  import PlutoSliderServer

                  PlutoSliderServer.export_notebook("most_downloaded_packages.jl";
                  )'

            - uses: actions/upload-artifact@v4
              if: always()
              with:
                name: most-popular-packages ${{ matrix.os }} ${{ matrix.julia-version }}
                path: output/top_packages_sorted_with_deps.txt
            
            - uses: actions/upload-artifact@v4
              if: always()
              with:
                name: most-popular-packages-notebook ${{ matrix.os }} ${{ matrix.julia-version }}
                path: most_downloaded_packages.html
            
            - name: Clear Julia depot
              run: rm -rf ${{ env.JULIA_DEPOT }}

            - name: ðŸš€
              run: julia measure_loading_times.jl

            - uses: actions/upload-artifact@v4
              if: always()
              with:
                name: pkg-load-times ${{ matrix.os }} ${{ matrix.julia-version }}
                path: output/pkg_load_times.toml


            - uses: actions/upload-artifact@v4
              if: always()
              with:
                name: ${{ env.FOLDER_NAME }}
                path: output/*


